#!/usr/bin/env bash

#-----------------------------------------------------------Check some errors

[ "$UID" = 0 ] && echo "doasedit: denied to run as root..." && exit 1

[ -z "$1" ] && echo "doasedit: doesn't has file to edit..." && exit 1

[ -n "$2" ] && echo "doasedit: only able edit one file..." && exit 1

[ ! -f "$1" ] && echo "doasedit: $1 is a directory or don't exist..." && exit 1

[ ! -r "$1" ] && echo "doasedit: doesn't has permission to read $1..." && exit 1

[ -w "$1" ] && echo "doasedit: $1 doesn't need root access to write..." && exit 1

#-----------------------------------------------------------Prepare and Set variables

# Create variables only if not already prefered by user
TMPDIR="${TMPDIR:-/tmp}"
EDITOR="${EDITOR:-vi}"

# Remove exist doasedit tmp file, incase it got left
rm -f $TMPDIR/doasedit-* >/dev/null

# Get random number using BASH builtin
random="$RANDOM$RANDOM$RANDOM$RANDOM"

# Make random variables static
tmpfile="$TMPDIR/doasedit-$random"

#----------------------------------------------------------Start to edit the file

# Copy original file to tmp directory
cp $1 $tmpfile

# Edit tmp file
$EDITOR $tmpfile

# Don't do anything if file's content doesn't change
cmp $1 $tmpfile -s && echo "doasedit: $1 doesn't change..." && rm -f $tmpfile && exit 0

while true; do

  # Ask user to create a backup, Yes by default
  read -p "doasedit: Do you want to create a backup of '$1' [Y/n]: " input
    case $input in

      [Yy][Ee][Ss]|[Yy]|'')
        doas cp -b $tmpfile $1
        # Break while loop only when user successfully type password
        [ "$?" != 1 ] && echo "doasedit: Backup at '${1}~'..." && break ;;

      [Nn][Oo]|[Nn])
        doas cp $tmpfile $1
        # Break while loop only when user successfully type password
        [ "$?" != 1 ] && break ;;

      *)
        echo "doasedit: Invaild answer(s)..." ;;
    esac
done

rm -f $tmpfile
